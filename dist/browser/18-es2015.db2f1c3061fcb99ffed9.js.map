{"version":3,"sources":["webpack:///src/app/modules/application/web-rtc/web-rtc.module.ts","webpack:///node_modules/@angular/material/progress-spinner/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///node_modules/@angular/material/progress-spinner/typings/index.d.ts.MatProgressSpinner.html","webpack:///src/app/modules/application/web-rtc/video-channel/video-channel.component.ts","webpack:///src/app/modules/application/web-rtc/video-channel/video-channel.component.ngfactory.js.pre-build-optimizer.js","webpack:///src/app/modules/application/web-rtc/video-channel/video-channel.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///src/app/modules/application/web-rtc/video-channel/video-channel.component.html","webpack:///src/app/modules/application/web-rtc/web-rtc-context/web-rtc-context.component.ts","webpack:///src/app/modules/application/web-rtc/web-rtc-context/web-rtc-context.component.ngfactory.js.pre-build-optimizer.js","webpack:///src/app/modules/application/web-rtc/web-rtc-context/web-rtc-context.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///src/app/modules/application/web-rtc/web-rtc-context/web-rtc-context.component.html","webpack:///src/app/modules/application/web-rtc/web-rtc.component.ts","webpack:///src/app/modules/application/web-rtc/web-rtc.component.ts.pre-build-optimizer.js","webpack:///src/app/modules/application/web-rtc/web-rtc.component.ngfactory.js.pre-build-optimizer.js","webpack:///src/app/modules/application/web-rtc/web-rtc.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///src/app/modules/application/web-rtc/web-rtc.component.html","webpack:///src/app/modules/application/web-rtc/web-rtc-routing.module.ts","webpack:///src/app/modules/application/web-rtc/web-rtc.module.ngfactory.js.pre-build-optimizer.js"],"names":["WebRtcModule","RenderType_MatProgressSpinner","core","ob","encapsulation","styles","data","View_MatProgressSpinner_1","_l","Lb","qb","_ck","_v","_co","component","_circleRadius","diameter","_strokeDashOffset","_strokeCircumference","_circleStrokeWidth","View_MatProgressSpinner_2","View_MatProgressSpinner_0","pb","common","p","ngSwitch","gb","q","N","K","ngSwitchCase","mode","_viewBox","VideoChannelComponent","[object Object]","appContext","webRtcService","statusColor","changeRef","this","localBadge","subscriptions","bottomVideo","bottomAudio","topPeerVideoImg","topPeerAudioImg","buttons","videoContext","local","push","announcements","subscribe","length","filter","ann","active","dataChannel","message","type","video","audio","contact","value","next","checkConnectionState","state","statusText","detectChanges","forEach","sub","unsubscribe","inx","videoTrack","stream","getVideoTracks","enabled","Number","audioTrack","getAudioTracks","sendDataMessages","statusColors","webrtc","disconnected","stopVideoChannel","webRtcContext","webRtcContexts","getContext","wid","uid","appUser","videoCollection","channel","readyState","send","JSON","stringify","className","checkVideoContexts","RenderType_VideoChannelComponent","View_VideoChannelComponent_1","index_ngfactory","b","a","icon","k","d","l","svgIcon","badge","x","a11y","c","C","animations","color","content","size","Cb","inline","overlap","isAbove","isAfter","hidden","_hasContent","disabled","View_VideoChannelComponent_2","View_VideoChannelComponent_3","typings_index_ngfactory","esm2015_button","f","_animationMode","View_VideoChannelComponent_4","en","$event","ad","clickIcon","View_VideoChannelComponent_0","Gb","y","z","r","j","klass","ngClass","toolbar_typings_index_ngfactory","toolbar","platform","Hb","_toolbarRows","contact_component_ngfactory","contact_component","h","app_context_service","database_service","context","Db","ngIf","onLoadedData","onEnded","Kb","transform","WebRtcContextComponent","RenderType_WebRtcContextComponent","View_WebRtcContextComponent_1","web_rtc_service","status_colors_service","$implicit","View_WebRtcContextComponent_0","ngForOf","web_rtc_component_WebRtcComponent","router","database","progress","duplicateCall","parse","window","localStorage","getItem","optimizeCall","micro","constraints","deviceId","volume","events","pipe","Object","event","g","startConnections","webRtcConnectionContext","snap","desc","val","setDescriptor","pcConnection","descriptor","cans","candidates","optimize","setCandidates","test","sendDescriptor","sendOffer","candidate","catch","onError","indexOf","setAnswerListener","newCandidates","cand","Classes","date","Date","now","sender","user","descId","messId","getRef","orderByChild","equalTo","on","handleDescriptor","bind","tslib_es6","__awaiter","contextId","initiator","localStream","navigator","mediaDevices","getUserMedia","messageContacts","concat","receivers","localIndex","findIndex","contactIndex","webRtcConnections","BehaviorSubject","fixed","pulse","undefined","Subject","SimplePeer","channelName","config","stunTurnConfig","stun","_debug","console","log","_channel","action","checkContact","dispatchDescriptor","_pc","addEventListener","target","iceGatheringState","then","setAnnouncement","text","perConnectionStates","closed","err","setImplicitListener","appChangeRef","markForCheck","signal","checkCandidates","func","ref","once","res","Promise","rej","requestCandidates","values","setDescriptorOptions","popup","error","RenderType_WebRtcComponent","View_WebRtcComponent_1","progress_spinner","_noopAnimations","View_WebRtcComponent_3","View_WebRtcComponent_2","contexts","View_WebRtcComponent_0","View_WebRtcComponent_Host_0","o","WebRtcComponentNgFactory","mb","WebRtcRoutingModule","__webpack_require__","__webpack_exports__","WebRtcModuleNgFactory","nb","zb","Ab","Z","router_ngfactory","tooltip_typings_index_ngfactory","v","n","m","s","D","observers","overlay","i","e","bidi","esm2015_select","tooltip","platform_browser","esm2015_core","menu","autocomplete","fesm2015_forms","w","p0_0","p0_1","flex_layout_esm2015_core","card","form_field","portal","scrolling","t","text_field","input","progress_bar","esm2015_radio","tabs","button_toggle","slide_toggle","slider","material_module","flex","extended","grid","flex_layout","general_module","path"],"mappings":"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","file":"18-es2015.db2f1c3061fcb99ffed9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WebRtcRoutingModule } from './web-rtc-routing.module';\nimport { WebRtcComponent } from './web-rtc.component';\nimport {MaterialModule} from \"../../material/material.module\";\nimport { VideoChannelComponent } from './video-channel/video-channel.component';\nimport { WebRtcContextComponent } from './web-rtc-context/web-rtc-context.component';\nimport {GeneralModule} from \"../../general/general.module\";\n\n\n@NgModule({\n  declarations: [\n      WebRtcComponent,\n      VideoChannelComponent,\n      WebRtcContextComponent\n  ],\n  imports: [\n    CommonModule,\n    WebRtcRoutingModule,\n      MaterialModule,\n      GeneralModule,\n  ]\n})\nexport class WebRtcModule { }\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/progress-spinner\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/bidi\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/platform-browser\";\nimport * as i6 from \"@angular/cdk/platform\";\nimport * as i7 from \"@angular/platform-browser/animations\";\nvar MatProgressSpinnerModuleNgFactory = i0.ɵcmf(i1.MatProgressSpinnerModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(1073742336, i3.BidiModule, i3.BidiModule, []), i0.ɵmpd(1073742336, i4.MatCommonModule, i4.MatCommonModule, [[2, i4.MATERIAL_SANITY_CHECKS], [2, i5.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i1.MatProgressSpinnerModule, i1.MatProgressSpinnerModule, [])]); });\nexport { MatProgressSpinnerModuleNgFactory as MatProgressSpinnerModuleNgFactory };\nvar styles_MatProgressSpinner = [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2s linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4s;animation-timing-function:cubic-bezier(.35,0,.25,1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10s cubic-bezier(.87,.03,.33,1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.60617px;transform:rotate(0)}12.5%{stroke-dashoffset:56.54867px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.60617px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.54867px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.60617px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.54867px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.60617px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.54867px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\"];\nvar RenderType_MatProgressSpinner = i0.ɵcrt({ encapsulation: 2, styles: styles_MatProgressSpinner, data: {} });\nexport { RenderType_MatProgressSpinner as RenderType_MatProgressSpinner };\nfunction View_MatProgressSpinner_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \":svg:circle\", [[\"cx\", \"50%\"], [\"cy\", \"50%\"]], [[1, \"r\", 0], [4, \"animation-name\", null], [4, \"stroke-dashoffset\", \"px\"], [4, \"stroke-dasharray\", \"px\"], [4, \"stroke-width\", \"%\"]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._circleRadius; var currVal_1 = (\"mat-progress-spinner-stroke-rotate-\" + _co.diameter); var currVal_2 = _co._strokeDashOffset; var currVal_3 = _co._strokeCircumference; var currVal_4 = _co._circleStrokeWidth; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); }); }\nfunction View_MatProgressSpinner_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \":svg:circle\", [[\"cx\", \"50%\"], [\"cy\", \"50%\"]], [[1, \"r\", 0], [4, \"stroke-dashoffset\", \"px\"], [4, \"stroke-dasharray\", \"px\"], [4, \"stroke-width\", \"%\"]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._circleRadius; var currVal_1 = _co._strokeDashOffset; var currVal_2 = _co._strokeCircumference; var currVal_3 = _co._circleStrokeWidth; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nexport function View_MatProgressSpinner_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \":svg:svg\", [[\"focusable\", \"false\"], [\"preserveAspectRatio\", \"xMidYMid meet\"]], [[4, \"width\", \"px\"], [4, \"height\", \"px\"], [1, \"viewBox\", 0]], null, null, null, null)), i0.ɵdid(1, 16384, null, 0, i2.NgSwitch, [], { ngSwitch: [0, \"ngSwitch\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatProgressSpinner_1)), i0.ɵdid(3, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatProgressSpinner_2)), i0.ɵdid(5, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_3 = (_co.mode === \"indeterminate\"); _ck(_v, 1, 0, currVal_3); var currVal_4 = true; _ck(_v, 3, 0, currVal_4); var currVal_5 = false; _ck(_v, 5, 0, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.diameter; var currVal_1 = _co.diameter; var currVal_2 = _co._viewBox; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_MatProgressSpinner_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-progress-spinner\", [[\"class\", \"mat-progress-spinner\"], [\"role\", \"progressbar\"]], [[2, \"_mat-animation-noopable\", null], [4, \"width\", \"px\"], [4, \"height\", \"px\"], [1, \"aria-valuemin\", 0], [1, \"aria-valuemax\", 0], [1, \"aria-valuenow\", 0], [1, \"mode\", 0]], null, null, View_MatProgressSpinner_0, RenderType_MatProgressSpinner)), i0.ɵdid(1, 114688, null, 0, i1.MatProgressSpinner, [i0.ElementRef, i6.Platform, [2, i2.DOCUMENT], [2, i7.ANIMATION_MODULE_TYPE], i1.MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._noopAnimations; var currVal_1 = i0.ɵnov(_v, 1).diameter; var currVal_2 = i0.ɵnov(_v, 1).diameter; var currVal_3 = ((i0.ɵnov(_v, 1).mode === \"determinate\") ? 0 : null); var currVal_4 = ((i0.ɵnov(_v, 1).mode === \"determinate\") ? 100 : null); var currVal_5 = ((i0.ɵnov(_v, 1).mode === \"determinate\") ? i0.ɵnov(_v, 1).value : null); var currVal_6 = i0.ɵnov(_v, 1).mode; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }); }\nvar MatProgressSpinnerNgFactory = i0.ɵccf(\"mat-progress-spinner\", i1.MatProgressSpinner, View_MatProgressSpinner_Host_0, { color: \"color\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", mode: \"mode\", value: \"value\" }, {}, []);\nexport { MatProgressSpinnerNgFactory as MatProgressSpinnerNgFactory };\nvar styles_MatSpinner = [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2s linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4s;animation-timing-function:cubic-bezier(.35,0,.25,1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10s cubic-bezier(.87,.03,.33,1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.60617px;transform:rotate(0)}12.5%{stroke-dashoffset:56.54867px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.60617px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.54867px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.60617px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.54867px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.60617px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.54867px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\"];\nvar RenderType_MatSpinner = i0.ɵcrt({ encapsulation: 2, styles: styles_MatSpinner, data: {} });\nexport { RenderType_MatSpinner as RenderType_MatSpinner };\nfunction View_MatSpinner_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \":svg:circle\", [[\"cx\", \"50%\"], [\"cy\", \"50%\"]], [[1, \"r\", 0], [4, \"animation-name\", null], [4, \"stroke-dashoffset\", \"px\"], [4, \"stroke-dasharray\", \"px\"], [4, \"stroke-width\", \"%\"]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._circleRadius; var currVal_1 = (\"mat-progress-spinner-stroke-rotate-\" + _co.diameter); var currVal_2 = _co._strokeDashOffset; var currVal_3 = _co._strokeCircumference; var currVal_4 = _co._circleStrokeWidth; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); }); }\nfunction View_MatSpinner_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \":svg:circle\", [[\"cx\", \"50%\"], [\"cy\", \"50%\"]], [[1, \"r\", 0], [4, \"stroke-dashoffset\", \"px\"], [4, \"stroke-dasharray\", \"px\"], [4, \"stroke-width\", \"%\"]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._circleRadius; var currVal_1 = _co._strokeDashOffset; var currVal_2 = _co._strokeCircumference; var currVal_3 = _co._circleStrokeWidth; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nexport function View_MatSpinner_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \":svg:svg\", [[\"focusable\", \"false\"], [\"preserveAspectRatio\", \"xMidYMid meet\"]], [[4, \"width\", \"px\"], [4, \"height\", \"px\"], [1, \"viewBox\", 0]], null, null, null, null)), i0.ɵdid(1, 16384, null, 0, i2.NgSwitch, [], { ngSwitch: [0, \"ngSwitch\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatSpinner_1)), i0.ɵdid(3, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatSpinner_2)), i0.ɵdid(5, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_3 = (_co.mode === \"indeterminate\"); _ck(_v, 1, 0, currVal_3); var currVal_4 = true; _ck(_v, 3, 0, currVal_4); var currVal_5 = false; _ck(_v, 5, 0, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.diameter; var currVal_1 = _co.diameter; var currVal_2 = _co._viewBox; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_MatSpinner_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-spinner\", [[\"class\", \"mat-spinner mat-progress-spinner\"], [\"mode\", \"indeterminate\"], [\"role\", \"progressbar\"]], [[2, \"_mat-animation-noopable\", null], [4, \"width\", \"px\"], [4, \"height\", \"px\"]], null, null, View_MatSpinner_0, RenderType_MatSpinner)), i0.ɵdid(1, 114688, null, 0, i1.MatSpinner, [i0.ElementRef, i6.Platform, [2, i2.DOCUMENT], [2, i7.ANIMATION_MODULE_TYPE], i1.MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._noopAnimations; var currVal_1 = i0.ɵnov(_v, 1).diameter; var currVal_2 = i0.ɵnov(_v, 1).diameter; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nvar MatSpinnerNgFactory = i0.ɵccf(\"mat-spinner\", i1.MatSpinner, View_MatSpinner_Host_0, { color: \"color\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", mode: \"mode\", value: \"value\" }, {}, []);\nexport { MatSpinnerNgFactory as MatSpinnerNgFactory };\n","<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"_viewBox\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" [ngSwitch]=\"mode === 'indeterminate'\"><circle *ngSwitchCase=\"true\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.animation-name]=\"'mat-progress-spinner-stroke-rotate-' + diameter\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle><circle *ngSwitchCase=\"false\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle></svg>","import {ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {VideoContext} from \"../../../../Classes/Classes\";\nimport {AppContextService} from \"../../../../services/app-context.service\";\nimport {WebRtcService} from \"../../../../services/web-rtc.service\";\nimport {StatusColorsService} from \"../../../../services/status-colors.service\";\n\n@Component({\n  selector: 'app-video-channel',\n  templateUrl: './video-channel.component.html',\n  styleUrls: ['./video-channel.component.css']\n})\nexport class VideoChannelComponent implements OnInit, OnDestroy {\n    \n    public localBadge = '';\n    public subscriptions = [];\n    public bottomVideo = 'video';\n    public bottomAudio = 'audio';\n    public topPeerVideoImg = 'video';\n    public topPeerAudioImg = 'audio';\n    public buttons = [['video-off', 'video'], ['audio-off', 'audio']];\n    \n    @Input() public videoContext : VideoContext;\n  constructor(\n      public appContext : AppContextService,\n      public webRtcService : WebRtcService,\n      public statusColor : StatusColorsService,\n      public changeRef : ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n      //Подписка на получение уведомлений и отображение их количества в бейждике\n      this.videoContext.local && this.subscriptions.push(this.appContext.announcements.subscribe(announcements => {\n          let length = announcements.filter(ann => ann.active).length;\n\t  this.localBadge = length == 0 ? '' : length + '' ;\n      })) ;\n      //Подписка на получение данных по каналу данных\n      this.subscriptions.push(this.videoContext.dataChannel.data.subscribe(message => {\n            //Прилетели данные по каналу данных\n\t  //message : {type : settings, video : number, audio : number}\n\t  //  {type : status, status : StatusColorsService}\n\t  //Получено удаленное сообщение о данных удаленного пользователя\n\t  if(message.type === \"settings\"){\n\t      'video' in message && (this.topPeerVideoImg = this.buttons[0][message.video]);\n\t      'audio' in message && (this.topPeerAudioImg = this.buttons[1][message.audio]);\n\t  }else if(message.type === \"status\"){\n\t      let contact = this.videoContext.contact.value;\n\t      contact.statusColor = message.statusColor;\n\t      this.videoContext.contact.next(contact);\n\t      //если статус - один из статусов невозможности продолжения соединения\n\t      this.webRtcService.checkConnectionState({state : message.statusText, contact : contact, videoContext : this.videoContext});\n\t  }\n\t  this.changeRef.detectChanges();\n      }));\n  }\n   ngOnDestroy(): void {\n       this.subscriptions.forEach(sub => sub.unsubscribe());\n   }\n    \n    clickIcon(inx){\n      let message;\n        switch (inx) { //Изменение видеорежима\n\t    case 0 :\n\t\tlet videoTrack = this.videoContext.stream.value.getVideoTracks()[0];\n\t\tvideoTrack && (videoTrack.enabled = !(this.bottomVideo == 'video'));\n\t\tmessage = {type : 'settings', video :  Number(videoTrack.enabled) } ;\n\t\tthis.bottomVideo =  this.buttons[0][+ videoTrack.enabled] ;\n\t\tbreak;    //Изменение аудиорежима\n\t    case 1 :\n\t\tlet audioTrack = this.videoContext.stream.value.getAudioTracks()[0];\n\t\taudioTrack && (audioTrack.enabled = !(this.bottomAudio === 'audio'));\n\t\tmessage = {type : 'settings', audio : Number(audioTrack.enabled)} ;\n\t\tthis.bottomAudio =  this.buttons[1][+ audioTrack.enabled];\n\t\tbreak;\n\t    case 2 :\n\t        //есди видеоконтекст локальный - отправляем сообщение об остановки\n\t\tthis.videoContext.local && this.sendDataMessages({type : 'status', statusColor : this.statusColor.statusColors.webrtc['disconnected'], statusText : 'disconnected'});\n\t\t //Остановка видеозвонка\n\t        this.webRtcService.stopVideoChannel(this.videoContext);\n\t}\n\t//Отправить данные об изменении значений настроек всем удаленным каналам\n\tthis.sendDataMessages(message) ;\n    }\n    \n    sendDataMessages(message){\n\tlet webRtcContext = this.appContext.webRtcContexts.getContext(this.videoContext.wid),\n\t    local = this.videoContext.contact.value.uid === this.appContext.appUser.uid;\n\twebRtcContext && webRtcContext.videoCollection.forEach(videoContext =>{\n\t    if((local && (videoContext.contact.value.uid !== this.videoContext.contact.value.uid)) || (!local && (videoContext.contact.value.uid === this.videoContext.contact.value.uid))){\n\t\tif(!!videoContext.dataChannel.channel && videoContext.dataChannel.channel.readyState === 'open'){\n\t\t    videoContext.dataChannel.channel.send(JSON.stringify(message));\n\t\t}\n\t    }\n\t})\n    }\n    \n    onLoadedData(){\n\tthis.videoContext.className.active = true;\n\tthis.webRtcService.checkVideoContexts(this.videoContext);\n    }\n    onEnded(){\n\tthis.videoContext.className.active = false;\n\tthis.webRtcService.checkVideoContexts(this.videoContext);\n    }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./video-channel.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../../node_modules/@angular/material/icon/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/badge\";\nimport * as i5 from \"@angular/cdk/a11y\";\nimport * as i6 from \"@angular/platform-browser/animations\";\nimport * as i7 from \"../../../../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"../../../../../../node_modules/@angular/material/toolbar/typings/index.ngfactory\";\nimport * as i11 from \"@angular/material/toolbar\";\nimport * as i12 from \"@angular/cdk/platform\";\nimport * as i13 from \"../../../general/contact/contact.component.ngfactory\";\nimport * as i14 from \"../../../general/contact/contact.component\";\nimport * as i15 from \"../../../../services/app-context.service\";\nimport * as i16 from \"../../../../services/database.service\";\nimport * as i17 from \"./video-channel.component\";\nimport * as i18 from \"../../../../services/web-rtc.service\";\nimport * as i19 from \"../../../../services/status-colors.service\";\nvar styles_VideoChannelComponent = [i0.styles];\nvar RenderType_VideoChannelComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_VideoChannelComponent, data: {} });\nexport { RenderType_VideoChannelComponent as RenderType_VideoChannelComponent };\nfunction View_VideoChannelComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, \"div\", [[\"class\", \"top-local-block\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 2, \"mat-icon\", [[\"class\", \"mat-icon notranslate mat-badge\"], [\"matBadgeSize\", \"small\"], [\"role\", \"img\"], [\"svgIcon\", \"notifications\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null], [2, \"mat-badge-overlap\", null], [2, \"mat-badge-above\", null], [2, \"mat-badge-below\", null], [2, \"mat-badge-before\", null], [2, \"mat-badge-after\", null], [2, \"mat-badge-small\", null], [2, \"mat-badge-medium\", null], [2, \"mat-badge-large\", null], [2, \"mat-badge-hidden\", null], [2, \"mat-badge-disabled\", null]], null, null, i2.View_MatIcon_0, i2.RenderType_MatIcon)), i1.ɵdid(2, 9158656, null, 0, i3.MatIcon, [i1.ElementRef, i3.MatIconRegistry, [8, null], [2, i3.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), i1.ɵdid(3, 671744, null, 0, i4.MatBadge, [i1.NgZone, i1.ElementRef, i5.AriaDescriber, i1.Renderer2, [2, i6.ANIMATION_MODULE_TYPE]], { color: [0, \"color\"], content: [1, \"content\"], size: [2, \"size\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_12 = \"notifications\"; _ck(_v, 2, 0, currVal_12); var currVal_13 = \"accent\"; var currVal_14 = _co.localBadge; var currVal_15 = \"small\"; _ck(_v, 3, 0, currVal_13, currVal_14, currVal_15); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 2).inline; var currVal_1 = (((i1.ɵnov(_v, 2).color !== \"primary\") && (i1.ɵnov(_v, 2).color !== \"accent\")) && (i1.ɵnov(_v, 2).color !== \"warn\")); var currVal_2 = i1.ɵnov(_v, 3).overlap; var currVal_3 = i1.ɵnov(_v, 3).isAbove(); var currVal_4 = !i1.ɵnov(_v, 3).isAbove(); var currVal_5 = !i1.ɵnov(_v, 3).isAfter(); var currVal_6 = i1.ɵnov(_v, 3).isAfter(); var currVal_7 = (i1.ɵnov(_v, 3).size === \"small\"); var currVal_8 = (i1.ɵnov(_v, 3).size === \"medium\"); var currVal_9 = (i1.ɵnov(_v, 3).size === \"large\"); var currVal_10 = (i1.ɵnov(_v, 3).hidden || !i1.ɵnov(_v, 3)._hasContent); var currVal_11 = i1.ɵnov(_v, 3).disabled; _ck(_v, 1, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11]); }); }\nfunction View_VideoChannelComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \"div\", [[\"class\", \"top-peer-block\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \"mat-icon\", [[\"class\", \"video-peer-img mat-icon notranslate\"], [\"role\", \"img\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i2.View_MatIcon_0, i2.RenderType_MatIcon)), i1.ɵdid(2, 9158656, null, 0, i3.MatIcon, [i1.ElementRef, i3.MatIconRegistry, [8, null], [2, i3.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵeld(3, 0, null, null, 1, \"mat-icon\", [[\"class\", \"microphone-peer-img mat-icon notranslate\"], [\"role\", \"img\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i2.View_MatIcon_0, i2.RenderType_MatIcon)), i1.ɵdid(4, 9158656, null, 0, i3.MatIcon, [i1.ElementRef, i3.MatIconRegistry, [8, null], [2, i3.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.topPeerVideoImg; _ck(_v, 2, 0, currVal_2); var currVal_5 = _co.topPeerAudioImg; _ck(_v, 4, 0, currVal_5); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 2).inline; var currVal_1 = (((i1.ɵnov(_v, 2).color !== \"primary\") && (i1.ɵnov(_v, 2).color !== \"accent\")) && (i1.ɵnov(_v, 2).color !== \"warn\")); _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_3 = i1.ɵnov(_v, 4).inline; var currVal_4 = (((i1.ɵnov(_v, 4).color !== \"primary\") && (i1.ɵnov(_v, 4).color !== \"accent\")) && (i1.ɵnov(_v, 4).color !== \"warn\")); _ck(_v, 3, 0, currVal_3, currVal_4); }); }\nfunction View_VideoChannelComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \"div\", [[\"class\", \"bottom-local-block\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 3, \"button\", [[\"mat-fab\", \"\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, i7.View_MatButton_0, i7.RenderType_MatButton)), i1.ɵdid(2, 180224, null, 0, i8.MatButton, [i1.ElementRef, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(3, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"phone-hangup\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i2.View_MatIcon_0, i2.RenderType_MatIcon)), i1.ɵdid(4, 9158656, null, 0, i3.MatIcon, [i1.ElementRef, i3.MatIconRegistry, [8, null], [2, i3.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null)], function (_ck, _v) { var currVal_4 = \"phone-hangup\"; _ck(_v, 4, 0, currVal_4); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 2).disabled || null); var currVal_1 = (i1.ɵnov(_v, 2)._animationMode === \"NoopAnimations\"); _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_2 = i1.ɵnov(_v, 4).inline; var currVal_3 = (((i1.ɵnov(_v, 4).color !== \"primary\") && (i1.ɵnov(_v, 4).color !== \"accent\")) && (i1.ɵnov(_v, 4).color !== \"warn\")); _ck(_v, 3, 0, currVal_2, currVal_3); }); }\nfunction View_VideoChannelComponent_4(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 13, \"div\", [[\"class\", \"bottom-peer-block\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 0, \"img\", [[\"class\", \"img-pulse\"], [\"src\", \"/assets/app-shell/Radio-1s-200px.svg\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 3, \"button\", [[\"class\", \"bottom-peer-video\"], [\"mat-mini-fab\", \"\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.clickIcon(0) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i7.View_MatButton_0, i7.RenderType_MatButton)), i1.ɵdid(3, 180224, null, 0, i8.MatButton, [i1.ElementRef, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(4, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"video-img mat-icon notranslate\"], [\"role\", \"img\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i2.View_MatIcon_0, i2.RenderType_MatIcon)), i1.ɵdid(5, 9158656, null, 0, i3.MatIcon, [i1.ElementRef, i3.MatIconRegistry, [8, null], [2, i3.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵeld(6, 0, null, null, 3, \"button\", [[\"class\", \"phone-hangup\"], [\"mat-mini-fab\", \"\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.clickIcon(2) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i7.View_MatButton_0, i7.RenderType_MatButton)), i1.ɵdid(7, 180224, null, 0, i8.MatButton, [i1.ElementRef, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(8, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"phone-hangup\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i2.View_MatIcon_0, i2.RenderType_MatIcon)), i1.ɵdid(9, 9158656, null, 0, i3.MatIcon, [i1.ElementRef, i3.MatIconRegistry, [8, null], [2, i3.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵeld(10, 0, null, null, 3, \"button\", [[\"class\", \"bottom-peer-audio\"], [\"mat-mini-fab\", \"\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.clickIcon(1) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i7.View_MatButton_0, i7.RenderType_MatButton)), i1.ɵdid(11, 180224, null, 0, i8.MatButton, [i1.ElementRef, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(12, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"microphone-img mat-icon notranslate\"], [\"role\", \"img\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i2.View_MatIcon_0, i2.RenderType_MatIcon)), i1.ɵdid(13, 9158656, null, 0, i3.MatIcon, [i1.ElementRef, i3.MatIconRegistry, [8, null], [2, i3.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_4 = _co.bottomVideo; _ck(_v, 5, 0, currVal_4); var currVal_9 = \"phone-hangup\"; _ck(_v, 9, 0, currVal_9); var currVal_14 = _co.bottomAudio; _ck(_v, 13, 0, currVal_14); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 3).disabled || null); var currVal_1 = (i1.ɵnov(_v, 3)._animationMode === \"NoopAnimations\"); _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_2 = i1.ɵnov(_v, 5).inline; var currVal_3 = (((i1.ɵnov(_v, 5).color !== \"primary\") && (i1.ɵnov(_v, 5).color !== \"accent\")) && (i1.ɵnov(_v, 5).color !== \"warn\")); _ck(_v, 4, 0, currVal_2, currVal_3); var currVal_5 = (i1.ɵnov(_v, 7).disabled || null); var currVal_6 = (i1.ɵnov(_v, 7)._animationMode === \"NoopAnimations\"); _ck(_v, 6, 0, currVal_5, currVal_6); var currVal_7 = i1.ɵnov(_v, 9).inline; var currVal_8 = (((i1.ɵnov(_v, 9).color !== \"primary\") && (i1.ɵnov(_v, 9).color !== \"accent\")) && (i1.ɵnov(_v, 9).color !== \"warn\")); _ck(_v, 8, 0, currVal_7, currVal_8); var currVal_10 = (i1.ɵnov(_v, 11).disabled || null); var currVal_11 = (i1.ɵnov(_v, 11)._animationMode === \"NoopAnimations\"); _ck(_v, 10, 0, currVal_10, currVal_11); var currVal_12 = i1.ɵnov(_v, 13).inline; var currVal_13 = (((i1.ɵnov(_v, 13).color !== \"primary\") && (i1.ɵnov(_v, 13).color !== \"accent\")) && (i1.ɵnov(_v, 13).color !== \"warn\")); _ck(_v, 12, 0, currVal_12, currVal_13); }); }\nexport function View_VideoChannelComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 26, \"div\", [[\"class\", \"video-container\"]], null, null, null, null, null)), i1.ɵprd(512, null, i9.ɵNgClassImpl, i9.ɵNgClassR2Impl, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2]), i1.ɵdid(2, 278528, null, 0, i9.NgClass, [i9.ɵNgClassImpl], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), (_l()(), i1.ɵeld(3, 0, null, null, 9, \"mat-toolbar\", [[\"class\", \"top-toolbar mat-toolbar\"]], [[2, \"mat-toolbar-multiple-rows\", null], [2, \"mat-toolbar-single-row\", null]], null, null, i10.View_MatToolbar_0, i10.RenderType_MatToolbar)), i1.ɵdid(4, 4243456, null, 1, i11.MatToolbar, [i1.ElementRef, i12.Platform, i9.DOCUMENT], null, null), i1.ɵqud(603979776, 1, { _toolbarRows: 1 }), (_l()(), i1.ɵeld(6, 0, null, 0, 2, \"app-contact\", [], null, null, null, i13.View_ContactComponent_0, i13.RenderType_ContactComponent)), i1.ɵdid(7, 114688, null, 0, i14.ContactComponent, [i1.ChangeDetectorRef, i15.AppContextService, i16.DatabaseService, i1.PLATFORM_ID], { context: [0, \"context\"] }, null), i1.ɵpid(131072, i9.AsyncPipe, [i1.ChangeDetectorRef]), (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_VideoChannelComponent_1)), i1.ɵdid(10, 16384, null, 0, i9.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_VideoChannelComponent_2)), i1.ɵdid(12, 16384, null, 0, i9.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(13, 0, null, null, 4, \"div\", [[\"class\", \"main-video-container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(14, 0, [[\"videoElement\", 1]], null, 3, \"video\", [[\"autoplay\", \"\"], [\"class\", \"video-element\"], [\"playsinline\", \"\"]], [[8, \"srcObject\", 0]], [[null, \"loadeddata\"], [null, \"ended\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"loadeddata\" === en)) {\n        var pd_0 = (_co.onLoadedData() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"ended\" === en)) {\n        var pd_1 = (_co.onEnded() !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i1.ɵprd(512, null, i9.ɵNgClassImpl, i9.ɵNgClassR2Impl, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2]), i1.ɵdid(16, 278528, null, 0, i9.NgClass, [i9.ɵNgClassImpl], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i1.ɵpid(131072, i9.AsyncPipe, [i1.ChangeDetectorRef]), (_l()(), i1.ɵeld(18, 0, null, null, 8, \"mat-toolbar\", [[\"class\", \"bottom-toolbar mat-toolbar\"]], [[2, \"mat-toolbar-multiple-rows\", null], [2, \"mat-toolbar-single-row\", null]], null, null, i10.View_MatToolbar_0, i10.RenderType_MatToolbar)), i1.ɵprd(512, null, i9.ɵNgClassImpl, i9.ɵNgClassR2Impl, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2]), i1.ɵdid(20, 278528, null, 0, i9.NgClass, [i9.ɵNgClassImpl], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i1.ɵdid(21, 4243456, null, 1, i11.MatToolbar, [i1.ElementRef, i12.Platform, i9.DOCUMENT], null, null), i1.ɵqud(603979776, 2, { _toolbarRows: 1 }), (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_VideoChannelComponent_3)), i1.ɵdid(24, 16384, null, 0, i9.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_VideoChannelComponent_4)), i1.ɵdid(26, 16384, null, 0, i9.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"video-container\"; var currVal_1 = _co.videoContext.className; _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_4 = i1.ɵunv(_v, 7, 0, i1.ɵnov(_v, 8).transform(_co.videoContext.contact)); _ck(_v, 7, 0, currVal_4); var currVal_5 = _co.videoContext.local; _ck(_v, 10, 0, currVal_5); var currVal_6 = !_co.videoContext.local; _ck(_v, 12, 0, currVal_6); var currVal_8 = \"video-element\"; var currVal_9 = _co.videoContext.className; _ck(_v, 16, 0, currVal_8, currVal_9); var currVal_12 = \"bottom-toolbar\"; var currVal_13 = _co.videoContext.className; _ck(_v, 20, 0, currVal_12, currVal_13); var currVal_14 = !_co.videoContext.local; _ck(_v, 24, 0, currVal_14); var currVal_15 = _co.videoContext.local; _ck(_v, 26, 0, currVal_15); }, function (_ck, _v) { var _co = _v.component; var currVal_2 = (i1.ɵnov(_v, 4)._toolbarRows.length > 0); var currVal_3 = (i1.ɵnov(_v, 4)._toolbarRows.length === 0); _ck(_v, 3, 0, currVal_2, currVal_3); var currVal_7 = i1.ɵunv(_v, 14, 0, i1.ɵnov(_v, 17).transform(_co.videoContext.stream)); _ck(_v, 14, 0, currVal_7); var currVal_10 = (i1.ɵnov(_v, 21)._toolbarRows.length > 0); var currVal_11 = (i1.ɵnov(_v, 21)._toolbarRows.length === 0); _ck(_v, 18, 0, currVal_10, currVal_11); }); }\nexport function View_VideoChannelComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-video-channel\", [], null, null, null, View_VideoChannelComponent_0, RenderType_VideoChannelComponent)), i1.ɵdid(1, 245760, null, 0, i17.VideoChannelComponent, [i15.AppContextService, i18.WebRtcService, i19.StatusColorsService, i1.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar VideoChannelComponentNgFactory = i1.ɵccf(\"app-video-channel\", i17.VideoChannelComponent, View_VideoChannelComponent_Host_0, { videoContext: \"videoContext\" }, {}, []);\nexport { VideoChannelComponentNgFactory as VideoChannelComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".video-container[_ngcontent-%COMP%]{position:relative;height:100%}.top-toolbar[_ngcontent-%COMP%]{position:absolute;top:0;background:0 0;display:flex;align-items:center;justify-content:space-between;z-index:2}.top-local-block[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.bottom-peer-block[_ngcontent-%COMP%]{width:160px;display:flex;justify-content:space-between;align-items:center}.bottom-peer-audio[_ngcontent-%COMP%], .bottom-peer-video[_ngcontent-%COMP%]{background-color:transparent!important}.main-video-container[_ngcontent-%COMP%]{height:100%}video.video-element[_ngcontent-%COMP%]{position:relative;z-index:0;top:0;left:0;width:100%;height:100%;-o-object-fit:cover;object-fit:cover;-o-object-position:50% 50%;object-position:50% 50%;border:0 solid #cecece}.phone-hangup[_ngcontent-%COMP%]{background-color:#c60000!important}mat-icon[_ngcontent-%COMP%]{color:#fff!important}.bottom-toolbar[_ngcontent-%COMP%]{background:0 0;position:absolute;bottom:0;display:flex;justify-content:center}.img-pulse[_ngcontent-%COMP%]{position:absolute;transform:scale(.9) rotate(-45deg);transform-origin:13px 88px;display:none}div.video-container.active.pulse[_ngcontent-%COMP%]   .img-pulse[_ngcontent-%COMP%]{display:initial}div.video-container.local.active[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;z-index:4;transition:.5s}div.video-container.local.active.fixed[_ngcontent-%COMP%]{bottom:0;left:0;width:200px;height:200px;top:unset}\"];\nexport { styles as styles };\n","<div class=\"video-container\" [ngClass]=\"videoContext.className\">\n\t<mat-toolbar class=\"top-toolbar\">\n\t\t<app-contact [context]=\"videoContext.contact | async\"></app-contact>\n\t\t<div class=\"top-local-block\" *ngIf=\"videoContext.local\">\n\t\t\t<mat-icon svgIcon=\"notifications\" [matBadge]=\"this.localBadge\" [matBadgeColor]=\"'accent'\" matBadgeSize=\"small\"></mat-icon>\n\t\t</div>\n\t\t<div class=\"top-peer-block\" *ngIf=\"!videoContext.local\">\n\t\t\t<mat-icon  [svgIcon]=\"topPeerVideoImg\" class=\"video-peer-img\" ></mat-icon>\n\t\t\t<mat-icon [svgIcon]=\"topPeerAudioImg\" class=\"microphone-peer-img\" ></mat-icon>\n\t\t</div>\n\t</mat-toolbar>\n\t<div class=\"main-video-container\">\n\t\t<video #videoElement class=\"video-element\" (loadeddata)=\"onLoadedData()\" [ngClass]=\"videoContext.className\" (ended)=\"onEnded()\" [srcObject]=\"videoContext.stream | async\"  autoplay playsinline ></video>\n\t</div>\n\t<mat-toolbar class=\"bottom-toolbar\" [ngClass]=\"videoContext.className\">\n\t\t<div class=\"bottom-local-block\" *ngIf=\"!videoContext.local\">\n\t\t\t<button mat-fab>\n\t\t\t\t<mat-icon svgIcon=\"phone-hangup\"></mat-icon>\n\t\t\t</button>\n\t\t</div>\n\t\t<div class=\"bottom-peer-block\" *ngIf=\"videoContext.local\">\n\t\t\t<img class=\"img-pulse\" src=\"/assets/app-shell/Radio-1s-200px.svg\">\n\t\t\t<button mat-mini-fab class=\"bottom-peer-video\" (click)=\"clickIcon(0)\">\n\t\t\t\t<mat-icon  [svgIcon]=\"bottomVideo\" class=\"video-img\" ></mat-icon>\n\t\t\t</button>\n\t\t\t<button mat-mini-fab class=\"phone-hangup\" (click)=\"clickIcon(2)\">\n\t\t\t\t<mat-icon  svgIcon=\"phone-hangup\"></mat-icon>\n\t\t\t</button>\n\t\t\t<button mat-mini-fab class=\"bottom-peer-audio\" (click)=\"clickIcon(1)\">\n\t\t\t\t<mat-icon [svgIcon]=\"bottomAudio\" class=\"microphone-img\" ></mat-icon>\n\t\t\t</button>\n\t\t</div>\n\t</mat-toolbar>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {WebRtcContext} from \"../../../../Classes/Classes\";\n\n@Component({\n  selector: 'app-web-rtc-context',\n  templateUrl: './web-rtc-context.component.html',\n  styleUrls: ['./web-rtc-context.component.css']\n})\nexport class WebRtcContextComponent implements OnInit {\n\n    @Input() public context : WebRtcContext;\n    \n    constructor() { }\n\n  ngOnInit() {\n  }\n\n  \n  \n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./web-rtc-context.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../video-channel/video-channel.component.ngfactory\";\nimport * as i3 from \"../video-channel/video-channel.component\";\nimport * as i4 from \"../../../../services/app-context.service\";\nimport * as i5 from \"../../../../services/web-rtc.service\";\nimport * as i6 from \"../../../../services/status-colors.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"./web-rtc-context.component\";\nvar styles_WebRtcContextComponent = [i0.styles];\nvar RenderType_WebRtcContextComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_WebRtcContextComponent, data: {} });\nexport { RenderType_WebRtcContextComponent as RenderType_WebRtcContextComponent };\nfunction View_WebRtcContextComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-video-channel\", [], null, null, null, i2.View_VideoChannelComponent_0, i2.RenderType_VideoChannelComponent)), i1.ɵdid(1, 245760, null, 0, i3.VideoChannelComponent, [i4.AppContextService, i5.WebRtcService, i6.StatusColorsService, i1.ChangeDetectorRef], { videoContext: [0, \"videoContext\"] }, null)], function (_ck, _v) { var currVal_0 = _v.context.$implicit; _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_WebRtcContextComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"web-rtc-context-container\"]], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_WebRtcContextComponent_1)), i1.ɵdid(2, 278528, null, 0, i7.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.context.videoCollection; _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_WebRtcContextComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-web-rtc-context\", [], null, null, null, View_WebRtcContextComponent_0, RenderType_WebRtcContextComponent)), i1.ɵdid(1, 114688, null, 0, i8.WebRtcContextComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar WebRtcContextComponentNgFactory = i1.ɵccf(\"app-web-rtc-context\", i8.WebRtcContextComponent, View_WebRtcContextComponent_Host_0, { context: \"context\" }, {}, []);\nexport { WebRtcContextComponentNgFactory as WebRtcContextComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".web-rtc-context-container[_ngcontent-%COMP%]{height:100%}\"];\nexport { styles as styles };\n","<div class=\"web-rtc-context-container\">\n\t<app-video-channel *ngFor=\"let video of context.videoCollection\" [videoContext]=\"video\"></app-video-channel>\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {AppContextService} from \"../../../services/app-context.service\";\nimport {NavigationStart, Router, RouterEvent} from \"@angular/router\";\nimport {filter} from \"rxjs/operators\";\nimport {Answer, Candidate, Descriptor, Offer, VideoContext, WebRtcConnectionContext} from \"../../../Classes/Classes\";\nimport {BehaviorSubject, Subject} from \"rxjs\";\nimport {WebRtcService} from \"../../../services/web-rtc.service\";\nimport {DatabaseService} from \"../../../services/database.service\";\nimport {StatusColorsService} from \"../../../services/status-colors.service\";\ndeclare var SimplePeer: import('simple-peer').SimplePeer;\n\n\n@Component({\n  selector: 'app-web-rtc',\n  templateUrl: './web-rtc.component.html',\n  styleUrls: ['./web-rtc.component.css']\n})\nexport class WebRtcComponent implements OnInit, OnDestroy, AfterViewInit {\n    \n    public progress = true;\n    public subscriptions = [];\n    //Получение настроек\n    public duplicateCall = JSON.parse(window.localStorage.getItem('duplicateCall'));\n    public optimizeCall =  JSON.parse(window.localStorage.getItem('optimizeCall'));\n    public video = JSON.parse(window.localStorage.getItem('videoinput'));\n    public micro = JSON.parse(window.localStorage.getItem('audioinput'));\n    public audio = JSON.parse(window.localStorage.getItem('audiooutput'));\n    //Установка ограничений\n    public constraints = {\n\taudio: {deviceId: (this.audio && this.audio.deviceId ? this.audio.deviceId : false) , volume : 1.0},\n\tvideo: {deviceId: (this.video && this.video.deviceId  ? this.video.deviceId : false)}\n    };\n\n  constructor(\n      public router : Router,\n      public webRtcService : WebRtcService,\n      public appContext : AppContextService,\n      public database : DatabaseService,\n      public statusColor : StatusColorsService,\n      ) { }\n\n  ngOnInit() {\n      //Подписка на события запуска нового маршрута для определения повторного запуска\n      //компонента и создания компонента контекста\n      this.router.events.pipe(filter((event: RouterEvent) => event instanceof NavigationStart)).subscribe((event) => {\n\t  //анализирование  event.url\n      });\n      this.startConnections();\n  }\n  \n  ngAfterViewInit(): void {\n      this.progress = false;\n  }\n    \n    ngOnDestroy(): void {\n      this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n    \n    //Обработчик ответов и неявных предложений\n  handleDescriptor(webRtcConnectionContext, snap){\n      let desc = snap.val();\n      this.setDescriptor(webRtcConnectionContext.pcConnection, desc);\n  }\n  \n  dispatchDescriptor(webRtcConnectionContext){\n      let desc = webRtcConnectionContext.descriptor,\n\t  cans = webRtcConnectionContext.candidates;\n      if(desc.optimize && cans.length){\n\t  desc.candidates = this.setCandidates(desc, cans);\n\t  /answers|offers\\/implicit/.test(desc.type) ? this.database.sendDescriptor(desc) : this.webRtcService.sendOffer(webRtcConnectionContext) ;\n      }else if(!desc.optimize){\n\t  /answers|offers\\/implicit/.test(desc.type) ? this.database.sendDescriptor(desc) : this.webRtcService.sendOffer(webRtcConnectionContext) ;\n\t  if(cans.length){\n\t      this.setCandidates(desc, cans).forEach(candidate => {\n\t\t  this.database.sendDescriptor(candidate).catch(this.onError)\n\t      })\n\t  }\n      }\n      //Установка обработчика приема ответа, если отправлен дескриптор предложения\n      desc.type.indexOf('offers') > -1 && this.setAnswerListener(webRtcConnectionContext);\n  }\n  \n    setCandidates(descriptor, candidates){\n         let newCandidates = [];\n         candidates.forEach(cand => {\n\t     newCandidates.push( new Candidate({\n\t\t wid : descriptor.wid,\n\t\t contact : descriptor.contact,\n\t\t date : Date.now(),\n\t\t sender : this.appContext.user.value,\n\t\t descId : descriptor.messId,\n\t\t type: 'candidates',\n\t\t desc: cand,\n\t\t active : true,\n\t\t optimize : descriptor.optimize,\n\t\t uid : descriptor.uid,\n\t     }));\n\t }) ;\n\treturn newCandidates;\n    }\n    \n    setAnswerListener(webRtcConnectionContext){\n\tthis.database.getRef('/web-rtc/answers/'+ this.appContext.appUser.uid).orderByChild(\"descId\").equalTo(webRtcConnectionContext.descriptor.messId).on('child_added', this.handleDescriptor.bind(this, webRtcConnectionContext));\n    }\n    \n    setImplicitListener(webRtcConnectionContext){\n\tthis.database.getRef('/web-rtc/offers/implicit/'+ this.appContext.appUser.uid).orderByChild(\"wid\").equalTo(webRtcConnectionContext.webRtcContext.wid).on('child_added', this.handleDescriptor.bind(this, webRtcConnectionContext));\n    }\n    \n  async startConnections(){\n    \n      let webRtcContext = this.appContext.webRtcContexts.getContext(this.appContext.contextId);\n      if(!webRtcContext) return ;\n      let initiator = webRtcContext.uid === this.appContext.appUser.uid;\n      webRtcContext.localStream = await navigator.mediaDevices.getUserMedia(this.constraints);\n      let messageContacts = [webRtcContext.sender].concat(webRtcContext.receivers.value);\n      if(messageContacts){\n\t  //Находим индекс локального пользователя\n\t  let localIndex = messageContacts.findIndex(contact => contact.uid === this.appContext.user.value.uid);\n\t  //Запуск всех потоков для каждого контакта\n\t  messageContacts.forEach((contact, contactIndex)=> {\n\t      let local = this.appContext.appUser.uid === contact.uid,\n\t\t  webRtcConnectionContext : WebRtcConnectionContext = webRtcContext.webRtcConnections[contact.uid] = new WebRtcConnectionContext({uid : contact.uid});\n\t      webRtcConnectionContext.webRtcContext = webRtcContext;\n\t      webRtcConnectionContext.uid = contact.uid;\n\t      //Видеоконтекст для каждого контакта\n\t      webRtcConnectionContext.videoContext = new VideoContext({\n\t\t  wid : webRtcContext.wid,\n\t\t  contact : new BehaviorSubject(local ? this.appContext.appUser : contact),\n\t\t  className : local ? {[contact.uid + ' local video-context'] : true, active : false, fixed : false, pulse : initiator} : {[contact.uid + ' remote video-context'] : true, active : false, pulse : false},\n\t\t  stream :  new BehaviorSubject( local ? webRtcContext.localStream : undefined),\n\t\t  local : local,\n\t\t  dataChannel : {data : new Subject(), channel : undefined},\n\t      });\n\t      webRtcContext.videoCollection.push(webRtcConnectionContext.videoContext);\n\t      //Если выполняется не локальный пользователь\n\t      if(!local) {\n\t\t  //Запуск соединения\n\t\t  webRtcConnectionContext.pcConnection = new SimplePeer({\n\t\t      //контакт имеет индекс больше индекса локального пользователя в коллекции контактов или обрабатывается инициатор вызова, тогда ставиться признак инициатора для генерирования предложения\n\t\t      initiator : initiator || localIndex < contactIndex,\n\t\t      channelName : contact.uid,\n\t\t      //Если соединение формируется для явного предложения, тогда свойство берется из настроек, иначе - из явного предложения\n\t\t      config : this.appContext.stunTurnConfig[ initiator ? window.localStorage.getItem('stunTurn') : webRtcContext.desc.stun ],\n\t\t      stream : webRtcContext.localStream,\n\t\t  });\n\t\t  webRtcConnectionContext.pcConnection._debug = console.log ;\n\t\t  //Установка ссылки на функцию отправки сообщений, чтобы контекст мог их отправлять\n\t\t  webRtcConnectionContext.videoContext.dataChannel.channel = webRtcConnectionContext.pcConnection._channel;\n\t\t  //Вызывается при генерации предложений, ответов, кандидатов\n\t\t  webRtcConnectionContext.pcConnection.on('signal', async (data)=> {\n\t\t      //Проанализировать настройку оптимизации соединения,\n\t\t      //предложение или ответ ждет формирование кандидатов и отправляются на сервер в одной упаковке\n\t\t      if(data.type){\n\t\t\t  if(data.type === 'offer') {\n\t\t\t      webRtcConnectionContext.descriptor = new Offer({\n\t\t\t\t  type: initiator ? 'offers/explicit' : 'offers/implicit',\n\t\t\t\t  action: 'offered',\n\t\t\t\t  contact: this.checkContact(contact),\n\t\t\t\t  uid: this.appContext.appUser.uid,\n\t\t\t\t  wid: webRtcContext.wid,\n\t\t\t\t  receivers: initiator ? webRtcContext.receivers.value : [contact],\n\t\t\t\t  sender: this.appContext.appUser,\n\t\t\t\t  stun: initiator ? window.localStorage.getItem('stunTurn') : webRtcContext.desc.stun,\n\t\t\t\t  desc: data,\n\t\t\t\t  optimize: initiator ? JSON.parse(window.localStorage.getItem('optimizeCall')) : webRtcContext.desc.optimize,\n\t\t\t\t  candidates : JSON.parse(window.localStorage.getItem('optimizeCall')) ? []: false,\n\t\t\t      }) ;\n\t\t\t  }\n\t\t\t  else if(data.type === 'answer'){\n\t\t\t\n\t\t\t      webRtcConnectionContext.descriptor = new Answer({\n\t\t\t\t  type : 'answers',\n\t\t\t\t  active : true,\n\t\t\t\t  contact : this.checkContact(contact),\n\t\t\t\t  uid :  webRtcContext.desc.uid,\n\t\t\t\t  descId : webRtcContext.desc.messId,\n\t\t\t\t  wid : webRtcContext.wid,\n\t\t\t\t  receivers : [webRtcContext.sender],\n\t\t\t\t  sender : this.appContext.appUser,\n\t\t\t\t  desc : data,\n\t\t\t\t  optimize :  webRtcContext.desc.optimize,\n\t\t\t\t  candidates : webRtcContext.desc.optimize ? []: false,\n\t\t\t      });\n\t\t\t  }\n\t\t      //Сложный вариант отправки дескрипторов обусловлен не постоянной очередностью выдачи предложений-ответов и кандидатов\n\t\t      this.dispatchDescriptor(webRtcConnectionContext);\n\t\t      \n\t\t      }else if(data.candidate){\n\t\t\t  //Сборка кандидатов\n\t\t\t  let descriptor = webRtcConnectionContext.descriptor;\n\t\t\t  //Сложный вариант отправки дескрипторов обусловлен не постоянной очередностью выдачи предложений-ответов и кандидатов\n\t\t\t   if(descriptor){\n\t\t\t      let candidate = new Candidate({\n\t\t\t\t   wid : descriptor.wid,\n\t\t\t\t   contact : this.checkContact(contact),\n\t\t\t\t   date : Date.now(),\n\t\t\t\t   sender : this.appContext.user.value,\n\t\t\t\t   descId : descriptor.messId,\n\t\t\t\t   type: 'candidates',\n\t\t\t\t   desc: data.candidate,\n\t\t\t\t   active : true,\n\t\t\t\t   optimize : descriptor.optimize,\n\t\t\t\t   uid : descriptor.uid,\n\t\t\t       });\n\t\t\t       //Проверка на опитимизацию соединения\n\t\t\t       if(descriptor.optimize) descriptor.candidates.push(candidate) ;\n\t\t\t       else this.database.sendDescriptor(candidate).catch(this.onError);\n\t\t\t   }else{\n\t\t\t       webRtcConnectionContext.candidates.push(data.candidate) ;\n\t\t\t   }\n\t\t      }\n\t\t  });\n\t\t  //Установка обработчика на изменения статуса сборки кандидатов\n\t\t  webRtcConnectionContext.pcConnection._pc.addEventListener('icegatheringstatechange', (event: any)=>{\n\t\t      //Завершилась сборка кандидатов\n\t\t      if(event.target.iceGatheringState === 'complete'){\n\t\t\t  //Сборка завершена\n\t\t\t  let desc : Offer | Answer =  webRtcConnectionContext.descriptor;\n\t\t\t  //Сложный вариант отправки дескрипторов обусловлен не постоянной очередностью выдачи предложений-ответов и кандидатов\n\t\t\t  if(desc && desc.optimize){\n\t\t\t      if(desc.candidates.length){\n\t\t\t\t  //Отправка дескриптора (offer/answer) на сервер\n\t\t\t\t  /answers|offers\\/implicit/.test(desc.type) && this.database.sendDescriptor(desc).then(()=> {\n\t\t\t\t      console.log('Сборка кандидатов завершена. Кандидаты отправлены.') ;\n\t\t\t\t  }).catch(this.onError);\n\t\t\t\t  /offers\\/explicit/.test(desc.type) && this.webRtcService.sendOffer(webRtcConnectionContext);\n\t\t\t\t  //Установка обработчика приема ответа, если отправлен дескриптор предложения\n\t\t\t\t  desc.type.indexOf('offers') > -1 && this.setAnswerListener(desc);\n\t\t\t      }else{\n\t\t\t\t  this.onError('Сбой отправки кандидатов в событии icegatheringstatechange.');\n\t\t\t\t  //TODO определить отображение сбоев несовместимости браузеров пользователю.\n\t\t\t\t  this.setAnnouncement({type : 'incompatibilityFailure'  , desc : {text : 'Сбой несовместимости.'}});\n\t\t\t      }\n\t\t\t  }else if(!desc){\n\t\t\t  \n\t\t\t  }\n\t\t      }\n\t\t  }) ;\n\t\t  //Установка обработчика на изменение статуса соединения для установки пользовательской индикации\n\t\t  webRtcConnectionContext.pcConnection._pc.addEventListener('connectionstatechange', (event: any)=>{\n\t\t      let contact = webRtcConnectionContext.videoContext.contact.value;\n\t\t      contact.statusColor = this.statusColor.statusColors.webrtc.perConnectionStates[event.type];\n\t\t      webRtcConnectionContext.videoContext.contact.next(contact);\n\t\t  }) ;\n\t\t  //обработчик установки готовности соединения передачи данных по каналу данных\n\t\t  webRtcConnectionContext.pcConnection.on('connect', () => {\n\t\t      //Передать информацию о включенных аппаратных средствах\n\t\t      webRtcConnectionContext.pcConnection.send(JSON.stringify({type : 'settings', video : 1, audio : 1}));\n\t\t  });\n\t\t  //Обработчик получения данных по канаду данных\n\t\t  webRtcConnectionContext.pcConnection.on('data', (data : any) => {\n\t\t      //Обработка данных активности , закрытие соединения и пр. удаленного пира\n\t\t      webRtcConnectionContext.videoContext.dataChannel.data.next(JSON.parse(data));\n\t\t  });\n\t\t  //Обработка получения удаленного потока\n\t\t  webRtcConnectionContext.pcConnection.on('stream', stream => {\n\t\t      webRtcConnectionContext.videoContext.stream.next(stream);\n\t\t  });\n\t\t  //Удаленный пир закрыл соединение\n\t\t  webRtcConnectionContext.pcConnection.on('close', () => {\n\t\t      //Соединение закрыто пиром , вызван метод pc.close()\n\t\t      webRtcConnectionContext.videoContext.dataChannel.data.next({type : 'status', statusColor : this.statusColor.statusColors.webrtc['closed'], statusText : 'closed'});\n\t\t  }) ;\n\t\t  //Ошибка в соединениии\n\t\t  webRtcConnectionContext.pcConnection.on('error', (err) => {});\n\t\t  //Установка удаленного дескриптора - явного предложения\n\t\t  if(!initiator && contactIndex === 0){\n\t\t\tthis.setDescriptor(webRtcConnectionContext.pcConnection, webRtcContext.desc);\n\t\t  }\n\t\t  else if(!initiator && localIndex < contactIndex){\n\t\t      //Если пользователь при старте компонента не является инициатором и его индекс меньше индекса контакта,\n\t\t      // тогда необходимо установить обработчики получения неявных предложений ПОСЛЕ СОЗДАНИЯ ВСЕХ СОЕДИНЕНИЙ\n\t\t      initiator || this.setImplicitListener(webRtcConnectionContext);\n\t\t  }\n\t      }\n\t  })\n      }\n      this.appContext.appChangeRef.markForCheck();\n  }\n  //Функция-заглушка проверяет присутствия значения свойст контакта, поскольку из базы данных приходят контакты с незаполненными некоторыми свойствами\n    //todo Обязательно убрать эту заглушку\n    checkContact(contact){\n       contact.statusColor = contact.statusColor || '';\n       return contact;\n    }\n    \n  setDescriptor(pcConnection, desc){\n      //Установить предложение / ответ\n      pcConnection.signal(desc.desc);\n      (async ()=> {\n\t  //Проверить кандидаты\n\t  //todo Обязательно! В этом месте, т.е. после установления удаленного дескриптора, и после\n\t  // установки локального потока, нужно установить СИНХРОННО удаленные кандидаты\n\t  //Установка/проверка кандидатов\n\t  await this.checkCandidates(desc, pcConnection);\n      })();\n  }\n  \n  //Запос кандидатов с сервера\n    requestCandidates(desc, func){\n\tthis.database.database.ref(`/web-rtc/candidates/${this.appContext.user.value.uid}`).orderByChild('descId').equalTo(desc.messId).once('value').then(res => {\n\t    let val = res.val();\n\t    val && func.bind(this, val)();\n\t}).catch(this.onError);\n    }\n  \n    //Обработчик установки или запроса с установкой кандидатов, в зависимости от настроек оптимизации\n    checkCandidates(desc, pcConnection) {\n\treturn  new Promise((res, rej)=> {\n\t    if(desc.optimize){\n\t\tsetCandidates.bind(this, desc.candidates, res, rej)() ;\n\t    }else {\n\t\tthis.requestCandidates(desc, (candidates) => {\n\t\t    candidates && setCandidates.bind(this, Object.values(candidates),res, rej)() ;\n\t\t});\n\t    }\n\t});\n\tfunction setCandidates(candidates, res, rej){\n\t    candidates.forEach(candidate => {\n\t\tpcConnection.signal({candidate : candidate.desc});\n\t\t//Снятие активности дескриптора\n\t\tthis.database.setDescriptorOptions({descriptor: candidate, data: {active: false}});\n\t\t    //Удаление кандидата из базы после его получения\n\t\t    //await this.database.deleteDescriptor({descriptor : candidate});\n\t    }).catch(err => rej(err));\n\t    res();\n\t}\n\t//todo Обязательно! Реализовать функциональность снятие обработчиков получения кандидатов после завершения вызова\n    }\n    \n    //Установка уведомления на страницу Announcement.component\n    setAnnouncement(popup){\n\t//Коллекция элементов на странице уведомлений\n\tthis.appContext.announcements.next([popup].concat(this.appContext.announcements.value)) ;\n\tthis.appContext.appChangeRef.markForCheck();\n    }\n    \n    onError(error){\n\tconsole.log(error);\n    }\n  \n}\n","import * as tslib_1 from \"tslib\";\nimport { AfterViewInit, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationStart } from \"@angular/router\";\nimport { filter } from \"rxjs/operators\";\nimport { Answer, Candidate, Offer, VideoContext, WebRtcConnectionContext } from \"../../../Classes/Classes\";\nimport { BehaviorSubject, Subject } from \"rxjs\";\nexport class WebRtcComponent {\n    constructor(router, webRtcService, appContext, database, statusColor) {\n        this.router = router;\n        this.webRtcService = webRtcService;\n        this.appContext = appContext;\n        this.database = database;\n        this.statusColor = statusColor;\n        this.progress = true;\n        this.subscriptions = [];\n        //Получение настроек\n        this.duplicateCall = JSON.parse(window.localStorage.getItem('duplicateCall'));\n        this.optimizeCall = JSON.parse(window.localStorage.getItem('optimizeCall'));\n        this.video = JSON.parse(window.localStorage.getItem('videoinput'));\n        this.micro = JSON.parse(window.localStorage.getItem('audioinput'));\n        this.audio = JSON.parse(window.localStorage.getItem('audiooutput'));\n        //Установка ограничений\n        this.constraints = {\n            audio: { deviceId: (this.audio && this.audio.deviceId ? this.audio.deviceId : false), volume: 1.0 },\n            video: { deviceId: (this.video && this.video.deviceId ? this.video.deviceId : false) }\n        };\n    }\n    ngOnInit() {\n        //Подписка на события запуска нового маршрута для определения повторного запуска\n        //компонента и создания компонента контекста\n        this.router.events.pipe(filter((event) => event instanceof NavigationStart)).subscribe((event) => {\n            //анализирование  event.url\n        });\n        this.startConnections();\n    }\n    ngAfterViewInit() {\n        this.progress = false;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n    //Обработчик ответов и неявных предложений\n    handleDescriptor(webRtcConnectionContext, snap) {\n        let desc = snap.val();\n        this.setDescriptor(webRtcConnectionContext.pcConnection, desc);\n    }\n    dispatchDescriptor(webRtcConnectionContext) {\n        let desc = webRtcConnectionContext.descriptor, cans = webRtcConnectionContext.candidates;\n        if (desc.optimize && cans.length) {\n            desc.candidates = this.setCandidates(desc, cans);\n            /answers|offers\\/implicit/.test(desc.type) ? this.database.sendDescriptor(desc) : this.webRtcService.sendOffer(webRtcConnectionContext);\n        }\n        else if (!desc.optimize) {\n            /answers|offers\\/implicit/.test(desc.type) ? this.database.sendDescriptor(desc) : this.webRtcService.sendOffer(webRtcConnectionContext);\n            if (cans.length) {\n                this.setCandidates(desc, cans).forEach(candidate => {\n                    this.database.sendDescriptor(candidate).catch(this.onError);\n                });\n            }\n        }\n        //Установка обработчика приема ответа, если отправлен дескриптор предложения\n        desc.type.indexOf('offers') > -1 && this.setAnswerListener(webRtcConnectionContext);\n    }\n    setCandidates(descriptor, candidates) {\n        let newCandidates = [];\n        candidates.forEach(cand => {\n            newCandidates.push(new Candidate({\n                wid: descriptor.wid,\n                contact: descriptor.contact,\n                date: Date.now(),\n                sender: this.appContext.user.value,\n                descId: descriptor.messId,\n                type: 'candidates',\n                desc: cand,\n                active: true,\n                optimize: descriptor.optimize,\n                uid: descriptor.uid,\n            }));\n        });\n        return newCandidates;\n    }\n    setAnswerListener(webRtcConnectionContext) {\n        this.database.getRef('/web-rtc/answers/' + this.appContext.appUser.uid).orderByChild(\"descId\").equalTo(webRtcConnectionContext.descriptor.messId).on('child_added', this.handleDescriptor.bind(this, webRtcConnectionContext));\n    }\n    setImplicitListener(webRtcConnectionContext) {\n        this.database.getRef('/web-rtc/offers/implicit/' + this.appContext.appUser.uid).orderByChild(\"wid\").equalTo(webRtcConnectionContext.webRtcContext.wid).on('child_added', this.handleDescriptor.bind(this, webRtcConnectionContext));\n    }\n    startConnections() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            let webRtcContext = this.appContext.webRtcContexts.getContext(this.appContext.contextId);\n            if (!webRtcContext)\n                return;\n            let initiator = webRtcContext.uid === this.appContext.appUser.uid;\n            webRtcContext.localStream = yield navigator.mediaDevices.getUserMedia(this.constraints);\n            let messageContacts = [webRtcContext.sender].concat(webRtcContext.receivers.value);\n            if (messageContacts) {\n                //Находим индекс локального пользователя\n                let localIndex = messageContacts.findIndex(contact => contact.uid === this.appContext.user.value.uid);\n                //Запуск всех потоков для каждого контакта\n                messageContacts.forEach((contact, contactIndex) => {\n                    let local = this.appContext.appUser.uid === contact.uid, webRtcConnectionContext = webRtcContext.webRtcConnections[contact.uid] = new WebRtcConnectionContext({ uid: contact.uid });\n                    webRtcConnectionContext.webRtcContext = webRtcContext;\n                    webRtcConnectionContext.uid = contact.uid;\n                    //Видеоконтекст для каждого контакта\n                    webRtcConnectionContext.videoContext = new VideoContext({\n                        wid: webRtcContext.wid,\n                        contact: new BehaviorSubject(local ? this.appContext.appUser : contact),\n                        className: local ? { [contact.uid + ' local video-context']: true, active: false, fixed: false, pulse: initiator } : { [contact.uid + ' remote video-context']: true, active: false, pulse: false },\n                        stream: new BehaviorSubject(local ? webRtcContext.localStream : undefined),\n                        local: local,\n                        dataChannel: { data: new Subject(), channel: undefined },\n                    });\n                    webRtcContext.videoCollection.push(webRtcConnectionContext.videoContext);\n                    //Если выполняется не локальный пользователь\n                    if (!local) {\n                        //Запуск соединения\n                        webRtcConnectionContext.pcConnection = new SimplePeer({\n                            //контакт имеет индекс больше индекса локального пользователя в коллекции контактов или обрабатывается инициатор вызова, тогда ставиться признак инициатора для генерирования предложения\n                            initiator: initiator || localIndex < contactIndex,\n                            channelName: contact.uid,\n                            //Если соединение формируется для явного предложения, тогда свойство берется из настроек, иначе - из явного предложения\n                            config: this.appContext.stunTurnConfig[initiator ? window.localStorage.getItem('stunTurn') : webRtcContext.desc.stun],\n                            stream: webRtcContext.localStream,\n                        });\n                        webRtcConnectionContext.pcConnection._debug = console.log;\n                        //Установка ссылки на функцию отправки сообщений, чтобы контекст мог их отправлять\n                        webRtcConnectionContext.videoContext.dataChannel.channel = webRtcConnectionContext.pcConnection._channel;\n                        //Вызывается при генерации предложений, ответов, кандидатов\n                        webRtcConnectionContext.pcConnection.on('signal', (data) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                            //Проанализировать настройку оптимизации соединения,\n                            //предложение или ответ ждет формирование кандидатов и отправляются на сервер в одной упаковке\n                            if (data.type) {\n                                if (data.type === 'offer') {\n                                    webRtcConnectionContext.descriptor = new Offer({\n                                        type: initiator ? 'offers/explicit' : 'offers/implicit',\n                                        action: 'offered',\n                                        contact: this.checkContact(contact),\n                                        uid: this.appContext.appUser.uid,\n                                        wid: webRtcContext.wid,\n                                        receivers: initiator ? webRtcContext.receivers.value : [contact],\n                                        sender: this.appContext.appUser,\n                                        stun: initiator ? window.localStorage.getItem('stunTurn') : webRtcContext.desc.stun,\n                                        desc: data,\n                                        optimize: initiator ? JSON.parse(window.localStorage.getItem('optimizeCall')) : webRtcContext.desc.optimize,\n                                        candidates: JSON.parse(window.localStorage.getItem('optimizeCall')) ? [] : false,\n                                    });\n                                }\n                                else if (data.type === 'answer') {\n                                    webRtcConnectionContext.descriptor = new Answer({\n                                        type: 'answers',\n                                        active: true,\n                                        contact: this.checkContact(contact),\n                                        uid: webRtcContext.desc.uid,\n                                        descId: webRtcContext.desc.messId,\n                                        wid: webRtcContext.wid,\n                                        receivers: [webRtcContext.sender],\n                                        sender: this.appContext.appUser,\n                                        desc: data,\n                                        optimize: webRtcContext.desc.optimize,\n                                        candidates: webRtcContext.desc.optimize ? [] : false,\n                                    });\n                                }\n                                //Сложный вариант отправки дескрипторов обусловлен не постоянной очередностью выдачи предложений-ответов и кандидатов\n                                this.dispatchDescriptor(webRtcConnectionContext);\n                            }\n                            else if (data.candidate) {\n                                //Сборка кандидатов\n                                let descriptor = webRtcConnectionContext.descriptor;\n                                //Сложный вариант отправки дескрипторов обусловлен не постоянной очередностью выдачи предложений-ответов и кандидатов\n                                if (descriptor) {\n                                    let candidate = new Candidate({\n                                        wid: descriptor.wid,\n                                        contact: this.checkContact(contact),\n                                        date: Date.now(),\n                                        sender: this.appContext.user.value,\n                                        descId: descriptor.messId,\n                                        type: 'candidates',\n                                        desc: data.candidate,\n                                        active: true,\n                                        optimize: descriptor.optimize,\n                                        uid: descriptor.uid,\n                                    });\n                                    //Проверка на опитимизацию соединения\n                                    if (descriptor.optimize)\n                                        descriptor.candidates.push(candidate);\n                                    else\n                                        this.database.sendDescriptor(candidate).catch(this.onError);\n                                }\n                                else {\n                                    webRtcConnectionContext.candidates.push(data.candidate);\n                                }\n                            }\n                        }));\n                        //Установка обработчика на изменения статуса сборки кандидатов\n                        webRtcConnectionContext.pcConnection._pc.addEventListener('icegatheringstatechange', (event) => {\n                            //Завершилась сборка кандидатов\n                            if (event.target.iceGatheringState === 'complete') {\n                                //Сборка завершена\n                                let desc = webRtcConnectionContext.descriptor;\n                                //Сложный вариант отправки дескрипторов обусловлен не постоянной очередностью выдачи предложений-ответов и кандидатов\n                                if (desc && desc.optimize) {\n                                    if (desc.candidates.length) {\n                                        //Отправка дескриптора (offer/answer) на сервер\n                                        /answers|offers\\/implicit/.test(desc.type) && this.database.sendDescriptor(desc).then(() => {\n                                            console.log('Сборка кандидатов завершена. Кандидаты отправлены.');\n                                        }).catch(this.onError);\n                                        /offers\\/explicit/.test(desc.type) && this.webRtcService.sendOffer(webRtcConnectionContext);\n                                        //Установка обработчика приема ответа, если отправлен дескриптор предложения\n                                        desc.type.indexOf('offers') > -1 && this.setAnswerListener(desc);\n                                    }\n                                    else {\n                                        this.onError('Сбой отправки кандидатов в событии icegatheringstatechange.');\n                                        //TODO определить отображение сбоев несовместимости браузеров пользователю.\n                                        this.setAnnouncement({ type: 'incompatibilityFailure', desc: { text: 'Сбой несовместимости.' } });\n                                    }\n                                }\n                                else if (!desc) {\n                                }\n                            }\n                        });\n                        //Установка обработчика на изменение статуса соединения для установки пользовательской индикации\n                        webRtcConnectionContext.pcConnection._pc.addEventListener('connectionstatechange', (event) => {\n                            let contact = webRtcConnectionContext.videoContext.contact.value;\n                            contact.statusColor = this.statusColor.statusColors.webrtc.perConnectionStates[event.type];\n                            webRtcConnectionContext.videoContext.contact.next(contact);\n                        });\n                        //обработчик установки готовности соединения передачи данных по каналу данных\n                        webRtcConnectionContext.pcConnection.on('connect', () => {\n                            //Передать информацию о включенных аппаратных средствах\n                            webRtcConnectionContext.pcConnection.send(JSON.stringify({ type: 'settings', video: 1, audio: 1 }));\n                        });\n                        //Обработчик получения данных по канаду данных\n                        webRtcConnectionContext.pcConnection.on('data', (data) => {\n                            //Обработка данных активности , закрытие соединения и пр. удаленного пира\n                            webRtcConnectionContext.videoContext.dataChannel.data.next(JSON.parse(data));\n                        });\n                        //Обработка получения удаленного потока\n                        webRtcConnectionContext.pcConnection.on('stream', stream => {\n                            webRtcConnectionContext.videoContext.stream.next(stream);\n                        });\n                        //Удаленный пир закрыл соединение\n                        webRtcConnectionContext.pcConnection.on('close', () => {\n                            //Соединение закрыто пиром , вызван метод pc.close()\n                            webRtcConnectionContext.videoContext.dataChannel.data.next({ type: 'status', statusColor: this.statusColor.statusColors.webrtc['closed'], statusText: 'closed' });\n                        });\n                        //Ошибка в соединениии\n                        webRtcConnectionContext.pcConnection.on('error', (err) => { });\n                        //Установка удаленного дескриптора - явного предложения\n                        if (!initiator && contactIndex === 0) {\n                            this.setDescriptor(webRtcConnectionContext.pcConnection, webRtcContext.desc);\n                        }\n                        else if (!initiator && localIndex < contactIndex) {\n                            //Если пользователь при старте компонента не является инициатором и его индекс меньше индекса контакта,\n                            // тогда необходимо установить обработчики получения неявных предложений ПОСЛЕ СОЗДАНИЯ ВСЕХ СОЕДИНЕНИЙ\n                            initiator || this.setImplicitListener(webRtcConnectionContext);\n                        }\n                    }\n                });\n            }\n            this.appContext.appChangeRef.markForCheck();\n        });\n    }\n    //Функция-заглушка проверяет присутствия значения свойст контакта, поскольку из базы данных приходят контакты с незаполненными некоторыми свойствами\n    //todo Обязательно убрать эту заглушку\n    checkContact(contact) {\n        contact.statusColor = contact.statusColor || '';\n        return contact;\n    }\n    setDescriptor(pcConnection, desc) {\n        //Установить предложение / ответ\n        pcConnection.signal(desc.desc);\n        (() => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            //Проверить кандидаты\n            //todo Обязательно! В этом месте, т.е. после установления удаленного дескриптора, и после\n            // установки локального потока, нужно установить СИНХРОННО удаленные кандидаты\n            //Установка/проверка кандидатов\n            yield this.checkCandidates(desc, pcConnection);\n        }))();\n    }\n    //Запос кандидатов с сервера\n    requestCandidates(desc, func) {\n        this.database.database.ref(`/web-rtc/candidates/${this.appContext.user.value.uid}`).orderByChild('descId').equalTo(desc.messId).once('value').then(res => {\n            let val = res.val();\n            val && func.bind(this, val)();\n        }).catch(this.onError);\n    }\n    //Обработчик установки или запроса с установкой кандидатов, в зависимости от настроек оптимизации\n    checkCandidates(desc, pcConnection) {\n        return new Promise((res, rej) => {\n            if (desc.optimize) {\n                setCandidates.bind(this, desc.candidates, res, rej)();\n            }\n            else {\n                this.requestCandidates(desc, (candidates) => {\n                    candidates && setCandidates.bind(this, Object.values(candidates), res, rej)();\n                });\n            }\n        });\n        function setCandidates(candidates, res, rej) {\n            candidates.forEach(candidate => {\n                pcConnection.signal({ candidate: candidate.desc });\n                //Снятие активности дескриптора\n                this.database.setDescriptorOptions({ descriptor: candidate, data: { active: false } });\n                //Удаление кандидата из базы после его получения\n                //await this.database.deleteDescriptor({descriptor : candidate});\n            }).catch(err => rej(err));\n            res();\n        }\n        //todo Обязательно! Реализовать функциональность снятие обработчиков получения кандидатов после завершения вызова\n    }\n    //Установка уведомления на страницу Announcement.component\n    setAnnouncement(popup) {\n        //Коллекция элементов на странице уведомлений\n        this.appContext.announcements.next([popup].concat(this.appContext.announcements.value));\n        this.appContext.appChangeRef.markForCheck();\n    }\n    onError(error) {\n        console.log(error);\n    }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./web-rtc.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/progress-spinner/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/progress-spinner\";\nimport * as i4 from \"@angular/cdk/platform\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/platform-browser/animations\";\nimport * as i7 from \"./web-rtc-context/web-rtc-context.component.ngfactory\";\nimport * as i8 from \"./web-rtc-context/web-rtc-context.component\";\nimport * as i9 from \"./web-rtc.component\";\nimport * as i10 from \"@angular/router\";\nimport * as i11 from \"../../../services/web-rtc.service\";\nimport * as i12 from \"../../../services/app-context.service\";\nimport * as i13 from \"../../../services/database.service\";\nimport * as i14 from \"../../../services/status-colors.service\";\nvar styles_WebRtcComponent = [i0.styles];\nvar RenderType_WebRtcComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_WebRtcComponent, data: {} });\nexport { RenderType_WebRtcComponent as RenderType_WebRtcComponent };\nfunction View_WebRtcComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"startScreen\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \"mat-progress-spinner\", [[\"class\", \"mat-progress-spinner\"], [\"color\", \"primary\"], [\"mode\", \"indeterminate\"], [\"role\", \"progressbar\"]], [[2, \"_mat-animation-noopable\", null], [4, \"width\", \"px\"], [4, \"height\", \"px\"], [1, \"aria-valuemin\", 0], [1, \"aria-valuemax\", 0], [1, \"aria-valuenow\", 0], [1, \"mode\", 0]], null, null, i2.View_MatProgressSpinner_0, i2.RenderType_MatProgressSpinner)), i1.ɵdid(2, 114688, null, 0, i3.MatProgressSpinner, [i1.ElementRef, i4.Platform, [2, i5.DOCUMENT], [2, i6.ANIMATION_MODULE_TYPE], i3.MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS], { color: [0, \"color\"], mode: [1, \"mode\"] }, null)], function (_ck, _v) { var currVal_7 = \"primary\"; var currVal_8 = \"indeterminate\"; _ck(_v, 2, 0, currVal_7, currVal_8); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 2)._noopAnimations; var currVal_1 = i1.ɵnov(_v, 2).diameter; var currVal_2 = i1.ɵnov(_v, 2).diameter; var currVal_3 = ((i1.ɵnov(_v, 2).mode === \"determinate\") ? 0 : null); var currVal_4 = ((i1.ɵnov(_v, 2).mode === \"determinate\") ? 100 : null); var currVal_5 = ((i1.ɵnov(_v, 2).mode === \"determinate\") ? i1.ɵnov(_v, 2).value : null); var currVal_6 = i1.ɵnov(_v, 2).mode; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }); }\nfunction View_WebRtcComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-web-rtc-context\", [], null, null, null, i7.View_WebRtcContextComponent_0, i7.RenderType_WebRtcContextComponent)), i1.ɵdid(1, 114688, null, 0, i8.WebRtcContextComponent, [], { context: [0, \"context\"] }, null)], function (_ck, _v) { var currVal_0 = _v.context.$implicit; _ck(_v, 1, 0, currVal_0); }, null); }\nfunction View_WebRtcComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, \"div\", [[\"class\", \"web-rtc-component-container\"]], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 2, null, View_WebRtcComponent_3)), i1.ɵdid(2, 278528, null, 0, i5.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), i1.ɵpid(131072, i5.AsyncPipe, [i1.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_0 = i1.ɵunv(_v, 2, 0, i1.ɵnov(_v, 3).transform(_co.appContext.webRtcContexts.contexts)); _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_WebRtcComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵand(16777216, null, null, 1, null, View_WebRtcComponent_1)), i1.ɵdid(1, 16384, null, 0, i5.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_WebRtcComponent_2)), i1.ɵdid(3, 16384, null, 0, i5.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.progress; _ck(_v, 1, 0, currVal_0); var currVal_1 = !_co.progress; _ck(_v, 3, 0, currVal_1); }, null); }\nexport function View_WebRtcComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-web-rtc\", [], null, null, null, View_WebRtcComponent_0, RenderType_WebRtcComponent)), i1.ɵdid(1, 4440064, null, 0, i9.WebRtcComponent, [i10.Router, i11.WebRtcService, i12.AppContextService, i13.DatabaseService, i14.StatusColorsService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar WebRtcComponentNgFactory = i1.ɵccf(\"app-web-rtc\", i9.WebRtcComponent, View_WebRtcComponent_Host_0, {}, {}, []);\nexport { WebRtcComponentNgFactory as WebRtcComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".web-rtc-component-container[_ngcontent-%COMP%]{height:100%}.startScreen[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;display:flex;justify-content:center;align-items:center}\"];\nexport { styles as styles };\n","<div class=\"startScreen\" *ngIf=\"progress\">\n\t<mat-progress-spinner color=\"primary\" mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n<div class=\"web-rtc-component-container\" *ngIf=\"!this.progress\">\n\t<app-web-rtc-context *ngFor=\"let webRtcContext of this.appContext.webRtcContexts.contexts | async\" [context]=\"webRtcContext\"></app-web-rtc-context>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {WebRtcComponent} from \"./web-rtc.component\";\n\n\nconst routes: Routes = [\n    {path : '', component : WebRtcComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WebRtcRoutingModule { }\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./web-rtc.module\";\nimport * as i2 from \"../../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"./web-rtc.component.ngfactory\";\nimport * as i4 from \"../../../../../node_modules/@angular/material/tooltip/typings/index.ngfactory\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/cdk/observers\";\nimport * as i7 from \"@angular/cdk/overlay\";\nimport * as i8 from \"@angular/cdk/bidi\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/tooltip\";\nimport * as i11 from \"@angular/platform-browser\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/menu\";\nimport * as i14 from \"@angular/material/autocomplete\";\nimport * as i15 from \"@angular/forms\";\nimport * as i16 from \"@angular/flex-layout/core\";\nimport * as i17 from \"@angular/router\";\nimport * as i18 from \"./web-rtc-routing.module\";\nimport * as i19 from \"@angular/material/toolbar\";\nimport * as i20 from \"@angular/material/icon\";\nimport * as i21 from \"@angular/material/card\";\nimport * as i22 from \"@angular/material/form-field\";\nimport * as i23 from \"@angular/cdk/portal\";\nimport * as i24 from \"@angular/cdk/platform\";\nimport * as i25 from \"@angular/cdk/scrolling\";\nimport * as i26 from \"@angular/cdk/a11y\";\nimport * as i27 from \"@angular/material/button\";\nimport * as i28 from \"@angular/cdk/text-field\";\nimport * as i29 from \"@angular/material/input\";\nimport * as i30 from \"@angular/material/progress-bar\";\nimport * as i31 from \"@angular/material/progress-spinner\";\nimport * as i32 from \"@angular/material/radio\";\nimport * as i33 from \"@angular/material/tabs\";\nimport * as i34 from \"@angular/material/badge\";\nimport * as i35 from \"@angular/material/button-toggle\";\nimport * as i36 from \"@angular/material/slide-toggle\";\nimport * as i37 from \"@angular/material/slider\";\nimport * as i38 from \"../../material/material.module\";\nimport * as i39 from \"@angular/flex-layout/flex\";\nimport * as i40 from \"@angular/flex-layout/extended\";\nimport * as i41 from \"@angular/flex-layout/grid\";\nimport * as i42 from \"@angular/flex-layout\";\nimport * as i43 from \"../../general/general.module\";\nimport * as i44 from \"./web-rtc.component\";\nvar WebRtcModuleNgFactory = i0.ɵcmf(i1.WebRtcModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵangular_packages_router_router_lNgFactory, i3.WebRtcComponentNgFactory, i4.TooltipComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i5.NgLocalization, i5.NgLocaleLocalization, [i0.LOCALE_ID, [2, i5.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i6.MutationObserverFactory, i6.MutationObserverFactory, []), i0.ɵmpd(4608, i7.Overlay, i7.Overlay, [i7.ScrollStrategyOptions, i7.OverlayContainer, i0.ComponentFactoryResolver, i7.OverlayPositionBuilder, i7.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i5.DOCUMENT, i8.Directionality, [2, i5.Location]]), i0.ɵmpd(5120, i7.ɵc, i7.ɵd, [i7.Overlay]), i0.ɵmpd(5120, i9.MAT_SELECT_SCROLL_STRATEGY, i9.MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, [i7.Overlay]), i0.ɵmpd(5120, i10.MAT_TOOLTIP_SCROLL_STRATEGY, i10.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i7.Overlay]), i0.ɵmpd(4608, i11.HAMMER_GESTURE_CONFIG, i12.GestureConfig, [[2, i12.MAT_HAMMER_OPTIONS], [2, i12.MatCommonModule]]), i0.ɵmpd(4608, i12.ErrorStateMatcher, i12.ErrorStateMatcher, []), i0.ɵmpd(5120, i13.MAT_MENU_SCROLL_STRATEGY, i13.ɵb22, [i7.Overlay]), i0.ɵmpd(5120, i14.MAT_AUTOCOMPLETE_SCROLL_STRATEGY, i14.MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, [i7.Overlay]), i0.ɵmpd(4608, i15.FormBuilder, i15.FormBuilder, []), i0.ɵmpd(4608, i15.ɵangular_packages_forms_forms_o, i15.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(5120, i0.APP_BOOTSTRAP_LISTENER, function (p0_0, p0_1) { return [i16.removeStyles(p0_0, p0_1)]; }, [i5.DOCUMENT, i0.PLATFORM_ID]), i0.ɵmpd(1073742336, i5.CommonModule, i5.CommonModule, []), i0.ɵmpd(1073742336, i17.RouterModule, i17.RouterModule, [[2, i17.ɵangular_packages_router_router_a], [2, i17.Router]]), i0.ɵmpd(1073742336, i18.WebRtcRoutingModule, i18.WebRtcRoutingModule, []), i0.ɵmpd(1073742336, i8.BidiModule, i8.BidiModule, []), i0.ɵmpd(1073742336, i12.MatCommonModule, i12.MatCommonModule, [[2, i12.MATERIAL_SANITY_CHECKS], [2, i11.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i19.MatToolbarModule, i19.MatToolbarModule, []), i0.ɵmpd(1073742336, i20.MatIconModule, i20.MatIconModule, []), i0.ɵmpd(1073742336, i21.MatCardModule, i21.MatCardModule, []), i0.ɵmpd(1073742336, i6.ObserversModule, i6.ObserversModule, []), i0.ɵmpd(1073742336, i22.MatFormFieldModule, i22.MatFormFieldModule, []), i0.ɵmpd(1073742336, i23.PortalModule, i23.PortalModule, []), i0.ɵmpd(1073742336, i24.PlatformModule, i24.PlatformModule, []), i0.ɵmpd(1073742336, i25.ScrollingModule, i25.ScrollingModule, []), i0.ɵmpd(1073742336, i7.OverlayModule, i7.OverlayModule, []), i0.ɵmpd(1073742336, i12.MatRippleModule, i12.MatRippleModule, []), i0.ɵmpd(1073742336, i12.MatPseudoCheckboxModule, i12.MatPseudoCheckboxModule, []), i0.ɵmpd(1073742336, i12.MatOptionModule, i12.MatOptionModule, []), i0.ɵmpd(1073742336, i9.MatSelectModule, i9.MatSelectModule, []), i0.ɵmpd(1073742336, i26.A11yModule, i26.A11yModule, []), i0.ɵmpd(1073742336, i10.MatTooltipModule, i10.MatTooltipModule, []), i0.ɵmpd(1073742336, i27.MatButtonModule, i27.MatButtonModule, []), i0.ɵmpd(1073742336, i28.TextFieldModule, i28.TextFieldModule, []), i0.ɵmpd(1073742336, i29.MatInputModule, i29.MatInputModule, []), i0.ɵmpd(1073742336, i30.MatProgressBarModule, i30.MatProgressBarModule, []), i0.ɵmpd(1073742336, i31.MatProgressSpinnerModule, i31.MatProgressSpinnerModule, []), i0.ɵmpd(1073742336, i32.MatRadioModule, i32.MatRadioModule, []), i0.ɵmpd(1073742336, i33.MatTabsModule, i33.MatTabsModule, []), i0.ɵmpd(1073742336, i34.MatBadgeModule, i34.MatBadgeModule, []), i0.ɵmpd(1073742336, i13._MatMenuDirectivesModule, i13._MatMenuDirectivesModule, []), i0.ɵmpd(1073742336, i13.MatMenuModule, i13.MatMenuModule, []), i0.ɵmpd(1073742336, i14.MatAutocompleteModule, i14.MatAutocompleteModule, []), i0.ɵmpd(1073742336, i35.MatButtonToggleModule, i35.MatButtonToggleModule, []), i0.ɵmpd(1073742336, i36._MatSlideToggleRequiredValidatorModule, i36._MatSlideToggleRequiredValidatorModule, []), i0.ɵmpd(1073742336, i36.MatSlideToggleModule, i36.MatSlideToggleModule, []), i0.ɵmpd(1073742336, i37.MatSliderModule, i37.MatSliderModule, []), i0.ɵmpd(1073742336, i38.MaterialModule, i38.MaterialModule, []), i0.ɵmpd(1073742336, i15.ɵangular_packages_forms_forms_d, i15.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i15.ReactiveFormsModule, i15.ReactiveFormsModule, []), i0.ɵmpd(1073742336, i16.CoreModule, i16.CoreModule, []), i0.ɵmpd(1073742336, i39.FlexModule, i39.FlexModule, []), i0.ɵmpd(1073742336, i40.ExtendedModule, i40.ExtendedModule, []), i0.ɵmpd(1073742336, i41.GridModule, i41.GridModule, []), i0.ɵmpd(1073742336, i42.FlexLayoutModule, i42.FlexLayoutModule, [[2, i16.SERVER_TOKEN], i0.PLATFORM_ID]), i0.ɵmpd(1073742336, i43.GeneralModule, i43.GeneralModule, []), i0.ɵmpd(1073742336, i1.WebRtcModule, i1.WebRtcModule, []), i0.ɵmpd(1024, i17.ROUTES, function () { return [[{ path: \"\", component: i44.WebRtcComponent }]]; }, [])]); });\nexport { WebRtcModuleNgFactory as WebRtcModuleNgFactory };\n"]}